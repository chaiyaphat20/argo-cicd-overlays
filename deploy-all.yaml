# Deploy all services with a single command
# kubectl apply -f deploy-all.yaml

# API1 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api1-deployment
  labels:
    app: api1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api1
  template:
    metadata:
      labels:
        app: api1
    spec:
      containers:
      - name: api1
        image: api1:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: Always

---
# API1 Service
apiVersion: v1
kind: Service
metadata:
  name: api1-service
  labels:
    app: api1
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: api1

---
# API2 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api2-deployment
  labels:
    app: api2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api2
  template:
    metadata:
      labels:
        app: api2
    spec:
      containers:
      - name: api2
        image: api2:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5100
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5100"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: Always

---
# API2 Service
apiVersion: v1
kind: Service
metadata:
  name: api2-service
  labels:
    app: api2
spec:
  type: ClusterIP
  ports:
  - port: 5100
    targetPort: 5100
    protocol: TCP
    name: http
  selector:
    app: api2

---
# Web1 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web1-deployment
  labels:
    app: web1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web1
  template:
    metadata:
      labels:
        app: web1
    spec:
      containers:
      - name: web1
        image: web1:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: NEXT_PUBLIC_API1_URL
          value: "http://api1-service:5000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      restartPolicy: Always

---
# Web1 Service
apiVersion: v1
kind: Service
metadata:
  name: web1-service
  labels:
    app: web1
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: web1

---
# Web2 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web2-deployment
  labels:
    app: web2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web2
  template:
    metadata:
      labels:
        app: web2
    spec:
      containers:
      - name: web2
        image: web2:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 31000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "31000"
        - name: NEXT_PUBLIC_API2_URL
          value: "http://api2-service:5100"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      restartPolicy: Always

---
# Web2 Service
apiVersion: v1
kind: Service
metadata:
  name: web2-service
  labels:
    app: web2
spec:
  type: ClusterIP
  ports:
  - port: 31000
    targetPort: 31000
    protocol: TCP
    name: http
  selector:
    app: web2